---
// Astro Component
const dotCount = 3;
---

<div>
	<div class="PhoneDotLoader">
		{
			Array.from({ length: dotCount }).map((_, ind) => (
				<div class="PhoneDotLoader__dot" style={`--i: ${ind}; opacity: 0;`} />
			))
		}

		<div class="PhoneDotLoader__spinnerWrap">
			<svg
				width="50"
				height="50"
				viewBox="0 0 100 100"
				xmlns="http://www.w3.org/2000/svg"
				class="PhoneDotLoader__spinner"
			>
				<circle
					cx="50"
					cy="50"
					r="40"
					stroke="#ff0000"
					fill="none"
					stroke-dasharray="282.6"
					stroke-dashoffset="282.6"
					stroke-linecap="round"
					class="circle"></circle>
			</svg>
			<svg
				stroke="#ff0000"
				fill="none"
				viewBox="0 0 24 24"
				height="200px"
				width="200px"
				xmlns="http://www.w3.org/2000/svg"
				class="PhoneDotLoader__checkmark"
				><path
					d="M5 12l5 5l10 -10"
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-dasharray="100"
					class="checkmarkPath"></path>
			</svg>
		</div>
	</div>
</div>

<style lang="scss">
	.PhoneDotLoader {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 0.5rem;
		margin-top: 3rem;
		position: relative;

		&__dot {
			width: 0.8rem;
			height: 0.8rem;
			border-radius: 50%;
			background-color: #ff0000;
			position: relative;

			// margin-bottom: 0.5rem;
			// animation: pulse 1.1s ease-in-out infinite;
			// animation-delay: calc(var(--i) * 0.1s); // Staggering based on index
		}

		&__spinnerWrap {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);

			width: 3.4rem;
			height: 3.4rem;
			overflow: visible;
		}

		&__spinner {
			stroke-width: 1.2rem;
		}
		&__checkmark {
			stroke-width: 4px;
		}

		&__spinner,
		&__checkmark {
			position: absolute;
			top: 0;
			left: 0;

			.checkmarkPath {
				stroke-dashoffset: 100;
			}
		}

		&__checkmark {
			left: -0.5rem;
			top: -0.4rem;
			// top: -0.28rem;
			// left: -0.3rem;
		}

		&__spinner {
			width: 3.4rem;
			height: 3.4rem;
		}

		&__checkmark {
			width: 4.2rem;
			min-height: 4.2rem;
			height: 4.2rem;
		}

		.spinner_P7sC {
			transform-origin: center;
			// animation: spinner_svv2 0.75s infinite linear;
		}

		@media screen and (max-width: 768px) {
			.PhoneDotLoader {
				&__dot {
					width: clamp(10px, 1.6vh, 0.8rem);
					height: clamp(10px, 1.6vh, 0.8rem);
				}

				&__spinnerWrap {
					width: clamp(46px, 5.4vh, 3.4rem);
					height: clamp(46px, 5.4vh, 3.4rem);
				}

				&__spinner {
					stroke-width: clamp(1rem, 2.4vh, 1.2rem);
					width: clamp(46px, 5.8vh, 3.4rem);
					// width: clamp(46px, 5.4vh, 3.4rem);

					// left: -0.3rem;
					top: -0.4rem;
				}
				&__checkmark {
					stroke-width: clamp(2px, 0.5vh, 4px);
					width: clamp(46px, 9vh, 3.8rem);
					top: -0.6rem;
				}
			}
		}

		@keyframes spinner_svv2 {
			100% {
				transform: rotate(-360deg);
			}
		}
	}
</style>
